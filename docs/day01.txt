1日目：プロジェクトを始める
=====


はじめに
-----
このチュートリアルでは、Advent Calendarの形式を借りて24日間にわたって Zend Framework を使ったウェブアプリケーションの開発方法について説明します。

各章は約1時間ほどで終わる程度であり、実際のWebサイトを最初から最後までコーディングすることで Zend Framework を学習します。

1日1時間24日合計で1日になります。これは Zend Framework を学ぶために必要な時間であると私たちは考えています。毎日、新しい機能がアプリケーションに追加され、ZendFramework のWeb開発ベストプラクティスと同時に新しい機能を紹介するためにこの開発プロセスを利用します。

24日間で作成するアプリケーションの名前は *Jobeet* です。これは PHP のフレームワークである symfony のチュートリアルと同じです。このチュートリアルでは同じアプリケーションを Zend Framework を使用して作成していきます。


今日はなにを？
-----------

今日は PHP コードは書きません。
しかし1行も書かないにしても新規プロジェクトをブートストラップすることで Zend Framework のようなフレームワークを使うことの利点を理解しはじめるでしょう。

この章の目標は開発環境のセットアップとWebブラウザでアプリケーションのページを表示させることです。


前提条件
-------

Zend Framework は PHP のフレームワークなので当然 PHP がインストールされた環境が必要です。
Zend Framework の開発・実行には PHP5 以上が必要です。

また、このチュートリアルではデータベースも使用します。
SQLite もしくは MySQL が使える環境であることを確認してください。

これらに加え Apache のモジュールである `mod_rewirte` が有効であることを前提に進めていきます。

もし `mod_rewrite` モジュールが有効でないならば、極力有効化することをオススメします。

Windowsを利用しているユーザーは[XAMPP](http://www.apachefriends.org/jp/xampp-windows.html)をインストールすることで、データベース、PHP、Apacheを簡単に導入することができます。

また、以降はXAMPPをインストール済みの前提で説明していきます。


Zend Framework のインストール
---------------

インストールを実行する前に、最初に Jobeet に関連するファイルをすべて格納するディレクトリを作る必要があります。

    c:\> cd c:\xampp\htdocs\jobeet


### Zend Framework のバージョンを選ぶ:
それでは、Zend Framework をインストールします。Zend Framework はかなりの頻度でバージョンアップが行われるので、チュートリアルを開始する時期によってバージョンにかなりの差がありますが、基本的な構造体は変わらないはずです。

このチュートリアルでは、Zend Framework バージョン 1.11.11をインストールすることを想定しています。


### Zend Framework のインストール位置を選ぶ:

Zend Framework をグローバルで利用できるようにインストールする、もしくはそれぞれのプロジェクトごとに組み込むことができます。

それぞれのプロジェクトは全体的に独立しているので後者がおすすめです。ローカルでアップグレードすればインストールした Zend Framework が意図せずにいくつかのプロジェクトを壊すことはありません。

これは異なるバージョンの Zend Framework で複数のプロジェクトを持ち、これらを1つづ適切にアップグレードできることを意味します。

ベストプラクティスとして、多くの人が Zend Framework フレームワークをプロジェクトの library/ ディレクトリにインストールします。ですので、最初にこのディレクトリを作ります:

    c:\> cd c:\xampp\htdocs\jobeet
    c:\xampp\htdocs\jobeet> mkdir library


### ダウンロードとインストール

公式サイトから[フルバージョンアーカイブ](http://framework.zend.com/download/latest)をダウンロードして、解凍後に現れるlibraryディレクトリのZendフォルダを、先程作ったlibraryディレクトリに保存します。

ダウンロード完了後、zfコマンドを使えるようにするため、binディレクトリをプロジェクトディレクトリにコピーします。

これで、 Zend Framework のインストールが完了しました。

ここまで完了したら Zend Framework のコマンドラインスクリプトが動くか、インストール済みのZend Framework確認します。

    c:\xampp\htdocs\jobeet> bin\zf.bat show version
    Zend Framework Version: 1.11.11

このコマンドは、現在インストールされている Zend Framework のバージョン番号が表示されます。


アプリケーションの作成
------------------

それではアプリケーションを作成してみましょう。Zend Framework zf.sh（Widnwosユーザーの場合はzf.bat）というコマンドを利用して作成します。

    c:\xampp\htdocs\jobeet> bin\zf.bat create project ./

と実行すると

    Creating project at c:\xampp\htdocs\jobeet
    Note: This command created a web project, for more information setting up your VHOST, please see docs/README

のように `c:\xampp\htdocs\jobeet` にアプリケーションのスケルトンが作成されます。

次に、アプリケーションの名前空間を変更するため、以下のコマンドを実行します。

    c:\xampp\htdocs\jobeet> zf change application.class-name-prefix Jobeet

これでコマンドラインから作成されるアプリケーションは Jobeet という名前空間が付加された状態で作成されるようになりました。


アプリケーションディレクトリの構成
-----------------------------

出来たスケルトンの各ディレクトリの役割は以下のようになります。

 * application - アプリケーションコードを格納するディレクトリ
 * public - ドキュメントルート 画像やCSSファイル等が追加されていきます
 * library - プロジェクト内で利用するライブラリ格納場所
 * tests - アプリケーションのテストコードを置くディレクトリ

ファイルの役割は

 application/
   * Bootstrap.php - アプリケーションの起動コードを記述する
   * configs/application.ini - プリケーション設定ファイル
   * controllers/ErrorControlelr.php - アプリケーションでエラーが発生した場合に呼び出されるエラーコントローラ
   * controllers/IndexController.php - アプリケーションインデックスコントローラ
   * views/scripts/error/error.phtml - ErrorControlelrクラスのerrorAction用テンプレート
   * views/scripts/index/index.phtml - IndexControlelrクラスのindexAction用テンプレート
 docs/
   * README.txt - 読んでください
 public/
   * index.php - アプリケーション実行ファイル
 tests/
   * application/bootstrap.php - テストコード起動ファイル
   * library/bootstrap.php - テストコード起動ファイル
   * phpunit.xml - PHPUnitのテスト環境の設定ファイル


Webサーバーのコンフィギュレーション
---------------------------

## Webサーバーのコンフィギュレーション：好ましくないやり方

プロジェクトを Web サーバーの Web 公開ルートディレクトリのどこかで作成したのであれば。すでに Web ブラウザでプロジェクトにアクセスできます。

もちろん設定ファイルを編集しないので、迅速なセットアップができますが、applications/configs/applications.ini にブラウザから直接アクセスできるので手抜きの悪い結果を見ることになります。Web サイトが Zend Framework で開発されたことをユーザーが知っていたら、たくさんのデリケートなファイルにアクセスが可能となってしまします。

**運用サーバーでこのセットアップ方法は絶対に実行してはなりません。 **次の節を読んで Web サーバーの適切な設定方法を学んでください。

## Web サーバーのセットアップ：セキュアな方法

Web 開発のよい習慣はスタイルシート、JavaScript、もしくは画像のような Web ブラウザがアクセスする必要のあるファイルだけを Web 公開ルートディレクトリの下に設置することです。デフォルトでは、Zend Framework プロジェクトの public サブディレクトリにこれらのファイルを保存することをおすすめします。

フロントコントローラは Web 公開のルートディレクトリの下に必要な唯一の PHP ファイルです。ほかのすべての PHP ファイルはブラウザから隠すことが可能で、セキュリティに関してよいアイデアです。

### Web サーバーのコンフィギュレーション

世界中から新しいプロジェクトにアクセスできるように Apache のコンフィギュレーションを変更しましょう。

httpd.conf 設定ファイルを見つけて開き次のコンフィギュレーションを最後の行を追加します:


    # Be sure to only have this line once in your configuration
    NameVirtualHost 127.0.0.1:8080

    # This is the configuration for your project
    Listen 127.0.0.1:8080

    <VirtualHost 127.0.0.1:8080>
      # Servername jobeet.localhost # ドメイン名で管理していく場合はコメントアウトを外します
      DocumentRoot "/home/zfprojects/Jobeet/public"
      DirectoryIndex index.php
      <Directory "/home/zfprojects/Jobeet/public">
        AllowOverride All
        Allow from All
      </Directory>
    </VirtualHost>


アプリケーションの実行環境を変更する
------------------------------

Zend Framework はプロジェクトを作成した時点では、実行環境が本番環境向けに設定されています。

これは実行環境に応じて、「public/.htaccess」を編集します。

以下に Zend Framework の設定を切り替えるための文字列を記述します。

    * 開発環境： development
    * テスト環境： testing
    * 本番環境： production

「public/.htaccess」に記述する文字列は上記3つのいずれかになります。

本番環境で公開するまでは開発環境として動作させるので、以下の記述を「public/.htaccess」の先頭行に記述します。

    SetEnv APPLICATION_ENV development

これで Jobeet アプリケーションは開発環境モードとして動作するようになりました。


新しい設定をテストする
------------------

XAMPPコントローラーからApache を再起動し、ブラウザを開き http://localhost:8080/ もしくは http://jobeet.localhost/を入力することで新しいアプリケーションにアクセスできるか確認します。どちらの URL になるのかは以前の節で選んだ設定によります。

画面に「Welcome to the Zend Framework!」と表示されれば成功です！


それではまた明日！
---------------

はい、今日はここまでです。まだ PHP コードを一行も書いていませんが、Zend Framework の開発環境をセットアップし、アプリケーションのスケルトンを作成することができました。

明日は、アプリケーションが何を行うのかを明らかにしチュートリアルの間に実装する必要のある要件を話します。

